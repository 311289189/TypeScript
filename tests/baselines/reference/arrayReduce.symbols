=== tests/cases/compiler/arrayReduce.ts ===
function toStrings(arr: ReadonlyArray<object>): string[] {
>toStrings : Symbol(toStrings, Decl(arrayReduce.ts, 0, 0))
>arr : Symbol(arr, Decl(arrayReduce.ts, 0, 19))
>ReadonlyArray : Symbol(ReadonlyArray, Decl(lib.es5.d.ts, --, --))

	return arr.reduce((acc, obj) => {
>arr.reduce : Symbol(ReadonlyArray.reduce, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>arr : Symbol(arr, Decl(arrayReduce.ts, 0, 19))
>reduce : Symbol(ReadonlyArray.reduce, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>acc : Symbol(acc, Decl(arrayReduce.ts, 1, 20))
>obj : Symbol(obj, Decl(arrayReduce.ts, 1, 24))

		acc.push(obj.toString());
>acc.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
>acc : Symbol(acc, Decl(arrayReduce.ts, 1, 20))
>push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
>obj.toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(arrayReduce.ts, 1, 24))
>toString : Symbol(Object.toString, Decl(lib.es5.d.ts, --, --))

		return acc;
>acc : Symbol(acc, Decl(arrayReduce.ts, 1, 20))

	}, [] as string[]);
}

